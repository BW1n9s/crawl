const { Given, When, Then, AfterAll } = require('cucumber');
const { Builder, By } = require('selenium-webdriver');
const fs = require('fs').promises;
const path = require('path');
const { LinkChecker } = require('./link_checker'); // Assuming LinkChecker class is in a separate file

let driver;
let checker;

Given('I am on the homepage of the website', async function () {
    driver = await new Builder().forBrowser('chrome').build();
    await driver.manage().window().maximize();
    checker = new LinkChecker('https://sm-wp2-dufgdjbuh8h3fqhs.australiaeast-01.azurewebsites.net');
    checker.urlQueue.push(checker.baseUrl);
});

When('I check all links on the website', async function () {
    while (checker.urlQueue.length > 0) {
        const url = checker.urlQueue.shift();
        if (url.includes('/blog') || url.includes('/blogs/')) {
            await checker.checkBlogPage(url);
        } else {
            await checker.checkRegularPage(url);
        }
    }
});

Then('I should see a report of all external links', async function () {
    await checker.generateReport();
    const report = JSON.parse(await fs.readFile('link-verification-report.json', 'utf8'));
    this.externalLinks = report.externalLinks;
    assert(this.externalLinks.length > 0, 'No external links found');
});

Then('I should see a report of all blog posts', async function () {
    const report = JSON.parse(await fs.readFile('link-verification-report.json', 'utf8'));
    this.blogPosts = report.blogPosts;
    assert(this.blogPosts.length > 0, 'No blog posts found');
});

Then('I should see a report of all social media links', async function () {
    const report = JSON.parse(await fs.readFile('link-verification-report.json', 'utf8'));
    this.socialLinks = report.socialLinks;
    assert(this.socialLinks.length > 0, 'No social media links found');
});

AfterAll(async function () {
    if (driver) {
        await driver.quit();
    }
});
